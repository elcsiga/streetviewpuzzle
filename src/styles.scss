
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$primary-color: $mat-teal;

$streetviewpuzzle-primary: mat-palette($primary-color);
$streetviewpuzzle-accent: mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$streetviewpuzzle-warn: mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$streetviewpuzzle-theme: mat-light-theme($streetviewpuzzle-primary, $streetviewpuzzle-accent, $streetviewpuzzle-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($streetviewpuzzle-theme);

/* You can add global styles to this file, and also import other style files */

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }

section {
    margin: 2rem 2rem;
}
h1, h2, h3, h4, h5, h6 {
    color: mat-color(map-get($streetviewpuzzle-theme, primary));
    font-family: 'Lakki Reddy', cursive;
}

.kit-primary-bg {
    background-color: mat-color(map-get($streetviewpuzzle-theme, primary));
    color: white;
}
.kit-clearfix {
    &:before,
    &:after {
        content: " ";
        display: table;
    }
    &:after {
        clear: both;
    }
}

.kit-full-width {
    width: 100%;
}

.kit-button-row {
    margin: 0 -.2rem;
    display: flex;
    flex-wrap: wrap;

    > a, > button {
        margin: .2rem;
    }

    > .kit-separator {
        flex: 1 1 auto;
    }
}

button.kit-wide-button {
    @media screen and (max-width: 480px) {
        width: 100%;
    }
}